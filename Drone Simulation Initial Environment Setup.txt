Drone Simulation Initial Environment Setup

Create virtual machine running Linux Ubuntu 18.04 with 2gb of RAM and 30gb of dynamically allocated hd space

A regular machine running Linux natively could be used just as easily. 

NOTE: All of the dependencies and software versions used in this document were tested with Linux Ubuntu 18.04. Later versions of Linux might able to be used, but problems may be faced regarding specific dependencies / versions of software resulting in errors
Install Dependencies 

Sudo apt-get install python-dev python-opencv python-wxgtk3.0 python-matplotlib python-pygame

Python-lxml python-yaml vim git

Sudo apt install python-pip

Pip install MAVProxy==1.8.17

Sudo usermod -a -G dialout $USER

Sudo apt-get remove modemmanager

Environment Setup:

Cd~

Mkdir courseRoot

Sudo echo “export courseRoot=/home/&USER/courseRoot”>>~/.bashrc
Install Ardupilot and setup environment
Mkdir apm (new directory to store the Ardupilot repository)

Git clone -b Copter-4.0.3 https://github.com/ardupilot/ardupilot

Cd ardupilot

Git submodule update --init --recursive

Cd Tools/autotest

Pwd - displays the path of the autotest directory, copy this onto clipboard

Sudo vi ~/.bashrc

At end of document, add:
Export PATH=”*”:$PATH 
(Asterisk in the above is the path copied onto the clipboard)

Source ~/.bashrc

To test, navigate to a directory that doesn’t contain ‘sim_vehicle.py’. Begin typing the name of that executable and hit tab to see if it autocompletes. Any executable in the ‘autotest’ directory can be now be accessed when not directly within that directory

Navigate to ‘apm’ directory

Copy full path

Sudo vi ~/.bashrc

Add to bottom of file:
EXPORT apm = *
Asterisk is directory path

:wq (saves and quits file)

Source ~/.bashrc

Echo $apm (confirm it worked, should display full path name)

Cd $apm (can now be used anywhere to navigate directly to the ‘apm’ directly



